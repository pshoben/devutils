
macro(reflang_harness HARNESS REGEX)
	message(STATUS "Generating test harness target: ${HARNESS}")

	set(INPUT "${HARNESS}.src.hpp")
	set(OUT_HPP "${HARNESS}.gen.hpp")
	set(OUT_CPP "${HARNESS}.gen.cpp")
	set(SOURCE "${HARNESS}.main.cpp")

	add_custom_command(
		OUTPUT "${CMAKE_CURRENT_SOURCE_DIR}/${OUT_HPP}"
		COMMAND ${CMAKE_COMMAND}
		ARGS
			-DINPUT=${INPUT}
			-DOUT_HPP=${OUT_HPP}
			-DOUT_CPP=${OUT_CPP}
			-DGEN=$<TARGET_FILE:reflang>
			-DREGEX="${REGEX}"
		WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR})

	add_custom_command(
		OUTPUT "${CMAKE_CURRENT_SOURCE_DIR}/${OUT_CPP}"
		COMMAND echo "Pretending to generate ${OUT_CPP} -- this is generated by ${OUT_HPP} rule.")

	add_executable(
		${HARNESS}
		${SOURCE}
		${INPUT}
		"${CMAKE_CURRENT_SOURCE_DIR}/${OUT_HPP}"
		"${CMAKE_CURRENT_SOURCE_DIR}/${OUT_CPP}")
	include_directories(../../lib)
	target_link_libraries(${HARNESS} libreflang)
	set_property(TARGET ${HARNESS} PROPERTY FOLDER "harness")
endmacro()

add_subdirectory(class)

